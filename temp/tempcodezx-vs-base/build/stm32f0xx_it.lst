ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB40:
  26              		.file 1 "Core/Src/stm32f0xx_it.c"
   1:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f0xx_it.c **** /**
   3:Core/Src/stm32f0xx_it.c ****  ******************************************************************************
   4:Core/Src/stm32f0xx_it.c ****  * @file    stm32f0xx_it.c
   5:Core/Src/stm32f0xx_it.c ****  * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f0xx_it.c ****  ******************************************************************************
   7:Core/Src/stm32f0xx_it.c ****  * @attention
   8:Core/Src/stm32f0xx_it.c ****  *
   9:Core/Src/stm32f0xx_it.c ****  * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f0xx_it.c ****  * All rights reserved.</center></h2>
  11:Core/Src/stm32f0xx_it.c ****  *
  12:Core/Src/stm32f0xx_it.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f0xx_it.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f0xx_it.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f0xx_it.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f0xx_it.c ****  *
  17:Core/Src/stm32f0xx_it.c ****  ******************************************************************************
  18:Core/Src/stm32f0xx_it.c ****  */
  19:Core/Src/stm32f0xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f0xx_it.c **** 
  21:Core/Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f0xx_it.c **** #include "main.h"
  23:Core/Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  24:Core/Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f0xx_it.c **** 
  28:Core/Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f0xx_it.c **** #include "control.h"
  31:Core/Src/stm32f0xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f0xx_it.c **** 
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 2


  33:Core/Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f0xx_it.c **** 
  36:Core/Src/stm32f0xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f0xx_it.c **** 
  38:Core/Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f0xx_it.c **** 
  41:Core/Src/stm32f0xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f0xx_it.c **** 
  43:Core/Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f0xx_it.c **** 
  46:Core/Src/stm32f0xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f0xx_it.c **** 
  48:Core/Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f0xx_it.c **** 
  51:Core/Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f0xx_it.c **** 
  53:Core/Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f0xx_it.c **** 
  56:Core/Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f0xx_it.c **** 
  58:Core/Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_adc;
  60:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  61:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  62:Core/Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Core/Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart2;
  64:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f0xx_it.c **** 
  66:Core/Src/stm32f0xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f0xx_it.c **** 
  68:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f0xx_it.c **** /**
  72:Core/Src/stm32f0xx_it.c ****  * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f0xx_it.c ****  */
  74:Core/Src/stm32f0xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f0xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  76:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f0xx_it.c **** 
  78:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f0xx_it.c **** 
  81:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f0xx_it.c **** }
  32              		.loc 1 82 1 view .LVU1
  33              		@ sp needed
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 3


  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE40:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB41:
  83:Core/Src/stm32f0xx_it.c **** 
  84:Core/Src/stm32f0xx_it.c **** /**
  85:Core/Src/stm32f0xx_it.c ****  * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f0xx_it.c ****  */
  87:Core/Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f0xx_it.c **** {
  47              		.loc 1 88 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  89:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f0xx_it.c **** 
  91:Core/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f0xx_it.c ****   while (1)
  54              		.loc 1 92 3 discriminator 1 view .LVU3
  93:Core/Src/stm32f0xx_it.c ****   {
  94:Core/Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f0xx_it.c ****   }
  55              		.loc 1 96 3 discriminator 1 view .LVU4
  92:Core/Src/stm32f0xx_it.c ****   {
  56              		.loc 1 92 9 discriminator 1 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE41:
  61              		.section	.text.SVC_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	SVC_Handler
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  68              	SVC_Handler:
  69              	.LFB42:
  97:Core/Src/stm32f0xx_it.c **** }
  98:Core/Src/stm32f0xx_it.c **** 
  99:Core/Src/stm32f0xx_it.c **** /**
 100:Core/Src/stm32f0xx_it.c ****  * @brief This function handles System service call via SWI instruction.
 101:Core/Src/stm32f0xx_it.c ****  */
 102:Core/Src/stm32f0xx_it.c **** void SVC_Handler(void)
 103:Core/Src/stm32f0xx_it.c **** {
  70              		.loc 1 103 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 4


  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 104:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 105:Core/Src/stm32f0xx_it.c **** 
 106:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 107:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 108:Core/Src/stm32f0xx_it.c **** 
 109:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 110:Core/Src/stm32f0xx_it.c **** }
  75              		.loc 1 110 1 view .LVU7
  76              		@ sp needed
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE42:
  81              		.section	.text.PendSV_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	PendSV_Handler
  84              		.syntax unified
  85              		.code	16
  86              		.thumb_func
  88              	PendSV_Handler:
  89              	.LFB43:
 111:Core/Src/stm32f0xx_it.c **** 
 112:Core/Src/stm32f0xx_it.c **** /**
 113:Core/Src/stm32f0xx_it.c ****  * @brief This function handles Pendable request for system service.
 114:Core/Src/stm32f0xx_it.c ****  */
 115:Core/Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 116:Core/Src/stm32f0xx_it.c **** {
  90              		.loc 1 116 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 117:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 118:Core/Src/stm32f0xx_it.c **** 
 119:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 120:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 121:Core/Src/stm32f0xx_it.c **** 
 122:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 123:Core/Src/stm32f0xx_it.c **** }
  95              		.loc 1 123 1 view .LVU9
  96              		@ sp needed
  97 0000 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE43:
 101              		.section	.text.SysTick_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	SysTick_Handler
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 108              	SysTick_Handler:
 109              	.LFB44:
 124:Core/Src/stm32f0xx_it.c **** 
 125:Core/Src/stm32f0xx_it.c **** /**
 126:Core/Src/stm32f0xx_it.c ****  * @brief This function handles System tick timer.
 127:Core/Src/stm32f0xx_it.c ****  */
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 5


 128:Core/Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 129:Core/Src/stm32f0xx_it.c **** {
 110              		.loc 1 129 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI0:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 130:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 131:Core/Src/stm32f0xx_it.c **** 
 132:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 133:Core/Src/stm32f0xx_it.c ****   HAL_IncTick();
 119              		.loc 1 133 3 view .LVU11
 120 0002 FFF7FEFF 		bl	HAL_IncTick
 121              	.LVL0:
 134:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 135:Core/Src/stm32f0xx_it.c ****   sysms++;
 122              		.loc 1 135 3 view .LVU12
 123              		.loc 1 135 8 is_stmt 0 view .LVU13
 124 0006 1A4A     		ldr	r2, .L10
 125 0008 1368     		ldr	r3, [r2]
 126 000a 0133     		adds	r3, r3, #1
 127 000c 1360     		str	r3, [r2]
 136:Core/Src/stm32f0xx_it.c ****   readKeyTime++;
 128              		.loc 1 136 3 is_stmt 1 view .LVU14
 129              		.loc 1 136 14 is_stmt 0 view .LVU15
 130 000e 194A     		ldr	r2, .L10+4
 131 0010 1368     		ldr	r3, [r2]
 132 0012 0133     		adds	r3, r3, #1
 133 0014 1360     		str	r3, [r2]
 137:Core/Src/stm32f0xx_it.c ****   one1000msCnt++;
 134              		.loc 1 137 3 is_stmt 1 view .LVU16
 135              		.loc 1 137 15 is_stmt 0 view .LVU17
 136 0016 184A     		ldr	r2, .L10+8
 137 0018 1368     		ldr	r3, [r2]
 138 001a 0133     		adds	r3, r3, #1
 139 001c 1360     		str	r3, [r2]
 138:Core/Src/stm32f0xx_it.c ****   extern unsigned int LogTime;
 140              		.loc 1 138 3 is_stmt 1 view .LVU18
 139:Core/Src/stm32f0xx_it.c ****   LogTime++;
 141              		.loc 1 139 3 view .LVU19
 142              		.loc 1 139 10 is_stmt 0 view .LVU20
 143 001e 174A     		ldr	r2, .L10+12
 144 0020 1368     		ldr	r3, [r2]
 145 0022 0133     		adds	r3, r3, #1
 146 0024 1360     		str	r3, [r2]
 140:Core/Src/stm32f0xx_it.c ****   extern unsigned int jcBootCnt;
 147              		.loc 1 140 3 is_stmt 1 view .LVU21
 141:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQFLAG;
 148              		.loc 1 141 3 view .LVU22
 142:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQCHAN;
 149              		.loc 1 142 3 view .LVU23
 143:Core/Src/stm32f0xx_it.c ****   extern unsigned char JDQSTAT;
 150              		.loc 1 143 3 view .LVU24
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 6


 144:Core/Src/stm32f0xx_it.c ****   extern unsigned int JDQTIME;
 151              		.loc 1 144 3 view .LVU25
 145:Core/Src/stm32f0xx_it.c ****   if (JDQSTAT == 1 || JDQSTAT == 2 || JDQSTAT == 3)
 152              		.loc 1 145 3 view .LVU26
 153              		.loc 1 145 36 is_stmt 0 view .LVU27
 154 0026 164B     		ldr	r3, .L10+16
 155 0028 1B78     		ldrb	r3, [r3]
 156 002a 013B     		subs	r3, r3, #1
 157 002c DBB2     		uxtb	r3, r3
 158              		.loc 1 145 6 view .LVU28
 159 002e 022B     		cmp	r3, #2
 160 0030 03D8     		bhi	.L7
 146:Core/Src/stm32f0xx_it.c ****     JDQTIME++; // 改变后开始延时
 161              		.loc 1 146 5 is_stmt 1 view .LVU29
 162              		.loc 1 146 12 is_stmt 0 view .LVU30
 163 0032 144A     		ldr	r2, .L10+20
 164 0034 1368     		ldr	r3, [r2]
 165 0036 0133     		adds	r3, r3, #1
 166 0038 1360     		str	r3, [r2]
 167              	.L7:
 147:Core/Src/stm32f0xx_it.c ****   static unsigned int stms = 0;
 168              		.loc 1 147 3 is_stmt 1 view .LVU31
 148:Core/Src/stm32f0xx_it.c ****   jcBootCnt++;
 169              		.loc 1 148 3 view .LVU32
 170              		.loc 1 148 12 is_stmt 0 view .LVU33
 171 003a 134A     		ldr	r2, .L10+24
 172 003c 1368     		ldr	r3, [r2]
 173 003e 0133     		adds	r3, r3, #1
 174 0040 1360     		str	r3, [r2]
 149:Core/Src/stm32f0xx_it.c ****   if (++stms > 60000)
 175              		.loc 1 149 3 is_stmt 1 view .LVU34
 176              		.loc 1 149 7 is_stmt 0 view .LVU35
 177 0042 124A     		ldr	r2, .L10+28
 178 0044 1368     		ldr	r3, [r2]
 179 0046 0133     		adds	r3, r3, #1
 180              		.loc 1 149 6 view .LVU36
 181 0048 1360     		str	r3, [r2]
 182 004a 114A     		ldr	r2, .L10+32
 183 004c 9342     		cmp	r3, r2
 184 004e 06D9     		bls	.L8
 150:Core/Src/stm32f0xx_it.c ****   {
 151:Core/Src/stm32f0xx_it.c ****     stms = 0;
 185              		.loc 1 151 5 is_stmt 1 view .LVU37
 186              		.loc 1 151 10 is_stmt 0 view .LVU38
 187 0050 0E4B     		ldr	r3, .L10+28
 188 0052 0022     		movs	r2, #0
 189 0054 1A60     		str	r2, [r3]
 152:Core/Src/stm32f0xx_it.c ****     oneMinuteCnt++;
 190              		.loc 1 152 5 is_stmt 1 view .LVU39
 191              		.loc 1 152 17 is_stmt 0 view .LVU40
 192 0056 0F4A     		ldr	r2, .L10+36
 193 0058 1368     		ldr	r3, [r2]
 194 005a 0133     		adds	r3, r3, #1
 195 005c 1360     		str	r3, [r2]
 196              	.L8:
 153:Core/Src/stm32f0xx_it.c ****   }
 154:Core/Src/stm32f0xx_it.c ****   if (willBeepTime > 0)
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 7


 197              		.loc 1 154 3 is_stmt 1 view .LVU41
 198              		.loc 1 154 20 is_stmt 0 view .LVU42
 199 005e 0E4B     		ldr	r3, .L10+40
 200 0060 1B68     		ldr	r3, [r3]
 201              		.loc 1 154 6 view .LVU43
 202 0062 002B     		cmp	r3, #0
 203 0064 02D0     		beq	.L6
 155:Core/Src/stm32f0xx_it.c ****     willBeepTime--;
 204              		.loc 1 155 5 is_stmt 1 view .LVU44
 205              		.loc 1 155 17 is_stmt 0 view .LVU45
 206 0066 013B     		subs	r3, r3, #1
 207 0068 0B4A     		ldr	r2, .L10+40
 208 006a 1360     		str	r3, [r2]
 209              	.L6:
 156:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 157:Core/Src/stm32f0xx_it.c **** }
 210              		.loc 1 157 1 view .LVU46
 211              		@ sp needed
 212 006c 10BD     		pop	{r4, pc}
 213              	.L11:
 214 006e C046     		.align	2
 215              	.L10:
 216 0070 00000000 		.word	sysms
 217 0074 00000000 		.word	readKeyTime
 218 0078 00000000 		.word	one1000msCnt
 219 007c 00000000 		.word	LogTime
 220 0080 00000000 		.word	JDQSTAT
 221 0084 00000000 		.word	JDQTIME
 222 0088 00000000 		.word	jcBootCnt
 223 008c 00000000 		.word	.LANCHOR0
 224 0090 60EA0000 		.word	60000
 225 0094 00000000 		.word	oneMinuteCnt
 226 0098 00000000 		.word	willBeepTime
 227              		.cfi_endproc
 228              	.LFE44:
 230              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 231              		.align	1
 232              		.global	DMA1_Channel1_IRQHandler
 233              		.syntax unified
 234              		.code	16
 235              		.thumb_func
 237              	DMA1_Channel1_IRQHandler:
 238              	.LFB45:
 158:Core/Src/stm32f0xx_it.c **** 
 159:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 160:Core/Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 161:Core/Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 162:Core/Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 163:Core/Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 164:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 165:Core/Src/stm32f0xx_it.c **** 
 166:Core/Src/stm32f0xx_it.c **** /**
 167:Core/Src/stm32f0xx_it.c ****  * @brief This function handles DMA1 channel 1 interrupt.
 168:Core/Src/stm32f0xx_it.c ****  */
 169:Core/Src/stm32f0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 170:Core/Src/stm32f0xx_it.c **** {
 239              		.loc 1 170 1 is_stmt 1 view -0
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 8


 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 10B5     		push	{r4, lr}
 244              	.LCFI1:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 171:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 172:Core/Src/stm32f0xx_it.c **** 
 173:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 174:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc);
 248              		.loc 1 174 3 view .LVU48
 249 0002 0248     		ldr	r0, .L13
 250 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 251              	.LVL1:
 175:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 176:Core/Src/stm32f0xx_it.c **** 
 177:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 178:Core/Src/stm32f0xx_it.c **** }
 252              		.loc 1 178 1 is_stmt 0 view .LVU49
 253              		@ sp needed
 254 0008 10BD     		pop	{r4, pc}
 255              	.L14:
 256 000a C046     		.align	2
 257              	.L13:
 258 000c 00000000 		.word	hdma_adc
 259              		.cfi_endproc
 260              	.LFE45:
 262              		.section	.text.DMA1_Channel2_3_IRQHandler,"ax",%progbits
 263              		.align	1
 264              		.global	DMA1_Channel2_3_IRQHandler
 265              		.syntax unified
 266              		.code	16
 267              		.thumb_func
 269              	DMA1_Channel2_3_IRQHandler:
 270              	.LFB46:
 179:Core/Src/stm32f0xx_it.c **** 
 180:Core/Src/stm32f0xx_it.c **** /**
 181:Core/Src/stm32f0xx_it.c ****  * @brief This function handles DMA1 channel 2 and 3 interrupts.
 182:Core/Src/stm32f0xx_it.c ****  */
 183:Core/Src/stm32f0xx_it.c **** void DMA1_Channel2_3_IRQHandler(void)
 184:Core/Src/stm32f0xx_it.c **** {
 271              		.loc 1 184 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI2:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 185:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 186:Core/Src/stm32f0xx_it.c **** 
 187:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 0 */
 188:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 280              		.loc 1 188 3 view .LVU51
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 9


 281 0002 0248     		ldr	r0, .L16
 282 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 283              	.LVL2:
 189:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
 190:Core/Src/stm32f0xx_it.c **** 
 191:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 1 */
 192:Core/Src/stm32f0xx_it.c **** }
 284              		.loc 1 192 1 is_stmt 0 view .LVU52
 285              		@ sp needed
 286 0008 10BD     		pop	{r4, pc}
 287              	.L17:
 288 000a C046     		.align	2
 289              	.L16:
 290 000c 00000000 		.word	hdma_usart1_rx
 291              		.cfi_endproc
 292              	.LFE46:
 294              		.section	.text.DMA1_Channel4_5_IRQHandler,"ax",%progbits
 295              		.align	1
 296              		.global	DMA1_Channel4_5_IRQHandler
 297              		.syntax unified
 298              		.code	16
 299              		.thumb_func
 301              	DMA1_Channel4_5_IRQHandler:
 302              	.LFB47:
 193:Core/Src/stm32f0xx_it.c **** 
 194:Core/Src/stm32f0xx_it.c **** /**
 195:Core/Src/stm32f0xx_it.c ****  * @brief This function handles DMA1 channel 4 and 5 interrupts.
 196:Core/Src/stm32f0xx_it.c ****  */
 197:Core/Src/stm32f0xx_it.c **** void DMA1_Channel4_5_IRQHandler(void)
 198:Core/Src/stm32f0xx_it.c **** {
 303              		.loc 1 198 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 10B5     		push	{r4, lr}
 308              	.LCFI3:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
 199:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 0 */
 200:Core/Src/stm32f0xx_it.c **** 
 201:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_IRQn 0 */
 202:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 312              		.loc 1 202 3 view .LVU54
 313 0002 0248     		ldr	r0, .L19
 314 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 315              	.LVL3:
 203:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_IRQn 1 */
 204:Core/Src/stm32f0xx_it.c **** 
 205:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_IRQn 1 */
 206:Core/Src/stm32f0xx_it.c **** }
 316              		.loc 1 206 1 is_stmt 0 view .LVU55
 317              		@ sp needed
 318 0008 10BD     		pop	{r4, pc}
 319              	.L20:
 320 000a C046     		.align	2
 321              	.L19:
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 10


 322 000c 00000000 		.word	hdma_usart2_rx
 323              		.cfi_endproc
 324              	.LFE47:
 326              		.section	.text.USART1_IRQHandler,"ax",%progbits
 327              		.align	1
 328              		.global	USART1_IRQHandler
 329              		.syntax unified
 330              		.code	16
 331              		.thumb_func
 333              	USART1_IRQHandler:
 334              	.LFB48:
 207:Core/Src/stm32f0xx_it.c **** 
 208:Core/Src/stm32f0xx_it.c **** /**
 209:Core/Src/stm32f0xx_it.c ****  * @brief This function handles USART1 global interrupt.
 210:Core/Src/stm32f0xx_it.c ****  */
 211:Core/Src/stm32f0xx_it.c **** void USART1_IRQHandler(void)
 212:Core/Src/stm32f0xx_it.c **** {
 335              		.loc 1 212 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 10B5     		push	{r4, lr}
 340              	.LCFI4:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
 213:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 214:Core/Src/stm32f0xx_it.c **** 
 215:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 216:Core/Src/stm32f0xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 344              		.loc 1 216 3 view .LVU57
 345 0002 0248     		ldr	r0, .L22
 346 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 347              	.LVL4:
 217:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 218:Core/Src/stm32f0xx_it.c **** 
 219:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 220:Core/Src/stm32f0xx_it.c **** }
 348              		.loc 1 220 1 is_stmt 0 view .LVU58
 349              		@ sp needed
 350 0008 10BD     		pop	{r4, pc}
 351              	.L23:
 352 000a C046     		.align	2
 353              	.L22:
 354 000c 00000000 		.word	huart1
 355              		.cfi_endproc
 356              	.LFE48:
 358              		.section	.text.USART2_IRQHandler,"ax",%progbits
 359              		.align	1
 360              		.global	USART2_IRQHandler
 361              		.syntax unified
 362              		.code	16
 363              		.thumb_func
 365              	USART2_IRQHandler:
 366              	.LFB49:
 221:Core/Src/stm32f0xx_it.c **** 
 222:Core/Src/stm32f0xx_it.c **** /**
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 11


 223:Core/Src/stm32f0xx_it.c ****  * @brief This function handles USART2 global interrupt.
 224:Core/Src/stm32f0xx_it.c ****  */
 225:Core/Src/stm32f0xx_it.c **** void USART2_IRQHandler(void)
 226:Core/Src/stm32f0xx_it.c **** {
 367              		.loc 1 226 1 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 10B5     		push	{r4, lr}
 372              	.LCFI5:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 4, -8
 375              		.cfi_offset 14, -4
 227:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 228:Core/Src/stm32f0xx_it.c **** 
 229:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 230:Core/Src/stm32f0xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 376              		.loc 1 230 3 view .LVU60
 377 0002 0348     		ldr	r0, .L25
 378 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 379              	.LVL5:
 231:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 232:Core/Src/stm32f0xx_it.c ****   extern void u2RxIt(void);
 380              		.loc 1 232 3 view .LVU61
 233:Core/Src/stm32f0xx_it.c ****   u2RxIt();
 381              		.loc 1 233 3 view .LVU62
 382 0008 FFF7FEFF 		bl	u2RxIt
 383              	.LVL6:
 234:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 235:Core/Src/stm32f0xx_it.c **** }
 384              		.loc 1 235 1 is_stmt 0 view .LVU63
 385              		@ sp needed
 386 000c 10BD     		pop	{r4, pc}
 387              	.L26:
 388 000e C046     		.align	2
 389              	.L25:
 390 0010 00000000 		.word	huart2
 391              		.cfi_endproc
 392              	.LFE49:
 394              		.section	.bss.stms.0,"aw",%nobits
 395              		.align	2
 396              		.set	.LANCHOR0,. + 0
 399              	stms.0:
 400 0000 00000000 		.space	4
 401              		.text
 402              	.Letext0:
 403              		.file 2 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 404              		.file 3 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 405              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 406              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 407              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 408              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 409              		.file 8 "Core/Inc/control.h"
 410              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:18     .text.NMI_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:62     .text.SVC_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:68     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:82     .text.PendSV_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:88     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:102    .text.SysTick_Handler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:108    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:216    .text.SysTick_Handler:00000070 $d
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:231    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:237    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:258    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:263    .text.DMA1_Channel2_3_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:269    .text.DMA1_Channel2_3_IRQHandler:00000000 DMA1_Channel2_3_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:290    .text.DMA1_Channel2_3_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:295    .text.DMA1_Channel4_5_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:301    .text.DMA1_Channel4_5_IRQHandler:00000000 DMA1_Channel4_5_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:322    .text.DMA1_Channel4_5_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:327    .text.USART1_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:333    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:354    .text.USART1_IRQHandler:0000000c $d
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:359    .text.USART2_IRQHandler:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:365    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:390    .text.USART2_IRQHandler:00000010 $d
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:395    .bss.stms.0:00000000 $d
C:\Users\57298\AppData\Local\Temp\ccWTeWaR.s:399    .bss.stms.0:00000000 stms.0

UNDEFINED SYMBOLS
HAL_IncTick
sysms
readKeyTime
one1000msCnt
LogTime
JDQSTAT
JDQTIME
jcBootCnt
oneMinuteCnt
willBeepTime
HAL_DMA_IRQHandler
hdma_adc
hdma_usart1_rx
hdma_usart2_rx
HAL_UART_IRQHandler
huart1
u2RxIt
huart2
