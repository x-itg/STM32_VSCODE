ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f1xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw"
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 0024F400 		.word	16000000
  24              		.global	AHBPrescTable
  25              		.section	.rodata.AHBPrescTable,"a"
  26              		.align	2
  29              	AHBPrescTable:
  30 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  30      00000000 
  30      01020304 
  30      06
  31 000d 070809   		.ascii	"\007\010\011"
  32              		.global	APBPrescTable
  33              		.section	.rodata.APBPrescTable,"a"
  34              		.align	2
  37              	APBPrescTable:
  38 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  38      01020304 
  39              		.section	.text.SystemInit,"ax",%progbits
  40              		.align	1
  41              		.global	SystemInit
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	SystemInit:
  47              	.LFB65:
  48              		.file 1 "Src/system_stm32f1xx.c"
   1:Src/system_stm32f1xx.c **** /**
   2:Src/system_stm32f1xx.c ****   ******************************************************************************
   3:Src/system_stm32f1xx.c ****   * @file    system_stm32f1xx.c
   4:Src/system_stm32f1xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f1xx.c ****   * 
   7:Src/system_stm32f1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
   8:Src/system_stm32f1xx.c ****   *     user application:
   9:Src/system_stm32f1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  10:Src/system_stm32f1xx.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  11:Src/system_stm32f1xx.c ****   *                      This function is called at startup just after reset and 
  12:Src/system_stm32f1xx.c ****   *                      before branch to main program. This call is made inside
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 2


  13:Src/system_stm32f1xx.c ****   *                      the "startup_stm32f1xx_xx.s" file.
  14:Src/system_stm32f1xx.c ****   *
  15:Src/system_stm32f1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:Src/system_stm32f1xx.c ****   *                                  by the user application to setup the SysTick 
  17:Src/system_stm32f1xx.c ****   *                                  timer or configure other parameters.
  18:Src/system_stm32f1xx.c ****   *                                     
  19:Src/system_stm32f1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:Src/system_stm32f1xx.c ****   *                                 be called whenever the core clock is changed
  21:Src/system_stm32f1xx.c ****   *                                 during program execution.
  22:Src/system_stm32f1xx.c ****   *
  23:Src/system_stm32f1xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  24:Src/system_stm32f1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f1xx_xx.s" file, to
  25:Src/system_stm32f1xx.c ****   *    configure the system clock before to branch to main program.
  26:Src/system_stm32f1xx.c ****   *
  27:Src/system_stm32f1xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on
  28:Src/system_stm32f1xx.c ****   *    the product used), refer to "HSE_VALUE". 
  29:Src/system_stm32f1xx.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  30:Src/system_stm32f1xx.c ****   *    are using different crystal you have to adapt the HSE value to your own
  31:Src/system_stm32f1xx.c ****   *    configuration.
  32:Src/system_stm32f1xx.c ****   *        
  33:Src/system_stm32f1xx.c ****   ******************************************************************************
  34:Src/system_stm32f1xx.c ****   * @attention
  35:Src/system_stm32f1xx.c ****   *
  36:Src/system_stm32f1xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  37:Src/system_stm32f1xx.c ****   * All rights reserved.</center></h2>
  38:Src/system_stm32f1xx.c ****   *
  39:Src/system_stm32f1xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  40:Src/system_stm32f1xx.c ****   * the "License"; You may not use this file except in compliance with the
  41:Src/system_stm32f1xx.c ****   * License. You may obtain a copy of the License at:
  42:Src/system_stm32f1xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  43:Src/system_stm32f1xx.c ****   *
  44:Src/system_stm32f1xx.c ****   ******************************************************************************
  45:Src/system_stm32f1xx.c ****   */
  46:Src/system_stm32f1xx.c **** 
  47:Src/system_stm32f1xx.c **** /** @addtogroup CMSIS
  48:Src/system_stm32f1xx.c ****   * @{
  49:Src/system_stm32f1xx.c ****   */
  50:Src/system_stm32f1xx.c **** 
  51:Src/system_stm32f1xx.c **** /** @addtogroup stm32f1xx_system
  52:Src/system_stm32f1xx.c ****   * @{
  53:Src/system_stm32f1xx.c ****   */  
  54:Src/system_stm32f1xx.c ****   
  55:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Includes
  56:Src/system_stm32f1xx.c ****   * @{
  57:Src/system_stm32f1xx.c ****   */
  58:Src/system_stm32f1xx.c **** 
  59:Src/system_stm32f1xx.c **** #include "stm32f1xx.h"
  60:Src/system_stm32f1xx.c **** 
  61:Src/system_stm32f1xx.c **** /**
  62:Src/system_stm32f1xx.c ****   * @}
  63:Src/system_stm32f1xx.c ****   */
  64:Src/system_stm32f1xx.c **** 
  65:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_TypesDefinitions
  66:Src/system_stm32f1xx.c ****   * @{
  67:Src/system_stm32f1xx.c ****   */
  68:Src/system_stm32f1xx.c **** 
  69:Src/system_stm32f1xx.c **** /**
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 3


  70:Src/system_stm32f1xx.c ****   * @}
  71:Src/system_stm32f1xx.c ****   */
  72:Src/system_stm32f1xx.c **** 
  73:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Defines
  74:Src/system_stm32f1xx.c ****   * @{
  75:Src/system_stm32f1xx.c ****   */
  76:Src/system_stm32f1xx.c **** 
  77:Src/system_stm32f1xx.c **** #if !defined  (HSE_VALUE) 
  78:Src/system_stm32f1xx.c ****   #define HSE_VALUE               8000000U /*!< Default value of the External oscillator in Hz.
  79:Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  80:Src/system_stm32f1xx.c **** #endif /* HSE_VALUE */
  81:Src/system_stm32f1xx.c **** 
  82:Src/system_stm32f1xx.c **** #if !defined  (HSI_VALUE)
  83:Src/system_stm32f1xx.c ****   #define HSI_VALUE               8000000U /*!< Default value of the Internal oscillator in Hz.
  84:Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  85:Src/system_stm32f1xx.c **** #endif /* HSI_VALUE */
  86:Src/system_stm32f1xx.c **** 
  87:Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to use external SRAM  */ 
  88:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
  89:Src/system_stm32f1xx.c **** /* #define DATA_IN_ExtSRAM */
  90:Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
  91:Src/system_stm32f1xx.c **** 
  92:Src/system_stm32f1xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  93:Src/system_stm32f1xx.c ****          configuration. */
  94:Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  95:Src/system_stm32f1xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  96:Src/system_stm32f1xx.c ****      remap of boot address selected */
  97:Src/system_stm32f1xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  98:Src/system_stm32f1xx.c **** 
  99:Src/system_stm32f1xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 100:Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 101:Src/system_stm32f1xx.c ****      in Sram else user remap will be done in Flash. */
 102:Src/system_stm32f1xx.c **** /* #define VECT_TAB_SRAM */
 103:Src/system_stm32f1xx.c **** #if defined(VECT_TAB_SRAM)
 104:Src/system_stm32f1xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 105:Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 106:Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 107:Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 108:Src/system_stm32f1xx.c **** #else
 109:Src/system_stm32f1xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 110:Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 111:Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 112:Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 113:Src/system_stm32f1xx.c **** #endif /* VECT_TAB_SRAM */
 114:Src/system_stm32f1xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 115:Src/system_stm32f1xx.c **** 
 116:Src/system_stm32f1xx.c **** /******************************************************************************/
 117:Src/system_stm32f1xx.c **** 
 118:Src/system_stm32f1xx.c **** /**
 119:Src/system_stm32f1xx.c ****   * @}
 120:Src/system_stm32f1xx.c ****   */
 121:Src/system_stm32f1xx.c **** 
 122:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Macros
 123:Src/system_stm32f1xx.c ****   * @{
 124:Src/system_stm32f1xx.c ****   */
 125:Src/system_stm32f1xx.c **** 
 126:Src/system_stm32f1xx.c **** /**
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 4


 127:Src/system_stm32f1xx.c ****   * @}
 128:Src/system_stm32f1xx.c ****   */
 129:Src/system_stm32f1xx.c **** 
 130:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Variables
 131:Src/system_stm32f1xx.c ****   * @{
 132:Src/system_stm32f1xx.c ****   */
 133:Src/system_stm32f1xx.c **** 
 134:Src/system_stm32f1xx.c ****   /* This variable is updated in three ways:
 135:Src/system_stm32f1xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 136:Src/system_stm32f1xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 137:Src/system_stm32f1xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 138:Src/system_stm32f1xx.c ****          Note: If you use this function to configure the system clock; then there
 139:Src/system_stm32f1xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 140:Src/system_stm32f1xx.c ****                variable is updated automatically.
 141:Src/system_stm32f1xx.c ****   */
 142:Src/system_stm32f1xx.c **** uint32_t SystemCoreClock = 16000000;
 143:Src/system_stm32f1xx.c **** const uint8_t AHBPrescTable[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 144:Src/system_stm32f1xx.c **** const uint8_t APBPrescTable[8U] =  {0, 0, 0, 0, 1, 2, 3, 4};
 145:Src/system_stm32f1xx.c **** 
 146:Src/system_stm32f1xx.c **** /**
 147:Src/system_stm32f1xx.c ****   * @}
 148:Src/system_stm32f1xx.c ****   */
 149:Src/system_stm32f1xx.c **** 
 150:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_FunctionPrototypes
 151:Src/system_stm32f1xx.c ****   * @{
 152:Src/system_stm32f1xx.c ****   */
 153:Src/system_stm32f1xx.c **** 
 154:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 155:Src/system_stm32f1xx.c **** #ifdef DATA_IN_ExtSRAM
 156:Src/system_stm32f1xx.c ****   static void SystemInit_ExtMemCtl(void); 
 157:Src/system_stm32f1xx.c **** #endif /* DATA_IN_ExtSRAM */
 158:Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 159:Src/system_stm32f1xx.c **** 
 160:Src/system_stm32f1xx.c **** /**
 161:Src/system_stm32f1xx.c ****   * @}
 162:Src/system_stm32f1xx.c ****   */
 163:Src/system_stm32f1xx.c **** 
 164:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Functions
 165:Src/system_stm32f1xx.c ****   * @{
 166:Src/system_stm32f1xx.c ****   */
 167:Src/system_stm32f1xx.c **** 
 168:Src/system_stm32f1xx.c **** /**
 169:Src/system_stm32f1xx.c ****   * @brief  Setup the microcontroller system
 170:Src/system_stm32f1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 171:Src/system_stm32f1xx.c ****   *         SystemCoreClock variable.
 172:Src/system_stm32f1xx.c ****   * @note   This function should be used only after reset.
 173:Src/system_stm32f1xx.c ****   * @param  None
 174:Src/system_stm32f1xx.c ****   * @retval None
 175:Src/system_stm32f1xx.c ****   */
 176:Src/system_stm32f1xx.c **** void SystemInit (void)
 177:Src/system_stm32f1xx.c **** {
  49              		.loc 1 177 1
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54 0000 80B4     		push	{r7}
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 5


  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 7, -4
  58 0002 00AF     		add	r7, sp, #0
  59              	.LCFI1:
  60              		.cfi_def_cfa_register 7
 178:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 179:Src/system_stm32f1xx.c ****   #ifdef DATA_IN_ExtSRAM
 180:Src/system_stm32f1xx.c ****     SystemInit_ExtMemCtl(); 
 181:Src/system_stm32f1xx.c ****   #endif /* DATA_IN_ExtSRAM */
 182:Src/system_stm32f1xx.c **** #endif 
 183:Src/system_stm32f1xx.c **** 
 184:Src/system_stm32f1xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 185:Src/system_stm32f1xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 186:Src/system_stm32f1xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM.
 187:Src/system_stm32f1xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 188:Src/system_stm32f1xx.c **** }
  61              		.loc 1 188 1
  62 0004 00BF     		nop
  63 0006 BD46     		mov	sp, r7
  64              	.LCFI2:
  65              		.cfi_def_cfa_register 13
  66              		@ sp needed
  67 0008 80BC     		pop	{r7}
  68              	.LCFI3:
  69              		.cfi_restore 7
  70              		.cfi_def_cfa_offset 0
  71 000a 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE65:
  75              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  76              		.align	1
  77              		.global	SystemCoreClockUpdate
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	SystemCoreClockUpdate:
  83              	.LFB66:
 189:Src/system_stm32f1xx.c **** 
 190:Src/system_stm32f1xx.c **** /**
 191:Src/system_stm32f1xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 192:Src/system_stm32f1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 193:Src/system_stm32f1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 194:Src/system_stm32f1xx.c ****   *         other parameters.
 195:Src/system_stm32f1xx.c ****   *           
 196:Src/system_stm32f1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 197:Src/system_stm32f1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 198:Src/system_stm32f1xx.c ****   *         based on this variable will be incorrect.         
 199:Src/system_stm32f1xx.c ****   *     
 200:Src/system_stm32f1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 201:Src/system_stm32f1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 202:Src/system_stm32f1xx.c ****   *           constant and the selected clock source:
 203:Src/system_stm32f1xx.c ****   *             
 204:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 205:Src/system_stm32f1xx.c ****   *                                              
 206:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 207:Src/system_stm32f1xx.c ****   *                          
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 6


 208:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 209:Src/system_stm32f1xx.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 210:Src/system_stm32f1xx.c ****   *         
 211:Src/system_stm32f1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 212:Src/system_stm32f1xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 213:Src/system_stm32f1xx.c ****   *             in voltage and temperature.   
 214:Src/system_stm32f1xx.c ****   *    
 215:Src/system_stm32f1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 216:Src/system_stm32f1xx.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 217:Src/system_stm32f1xx.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 218:Src/system_stm32f1xx.c ****   *              Otherwise, this function may have wrong result.
 219:Src/system_stm32f1xx.c ****   *                
 220:Src/system_stm32f1xx.c ****   *         - The result of this function could be not correct when using fractional
 221:Src/system_stm32f1xx.c ****   *           value for HSE crystal.
 222:Src/system_stm32f1xx.c ****   * @param  None
 223:Src/system_stm32f1xx.c ****   * @retval None
 224:Src/system_stm32f1xx.c ****   */
 225:Src/system_stm32f1xx.c **** void SystemCoreClockUpdate (void)
 226:Src/system_stm32f1xx.c **** {
  84              		.loc 1 226 1
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI4:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 85B0     		sub	sp, sp, #20
  94              	.LCFI5:
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI6:
  98              		.cfi_def_cfa_register 7
 227:Src/system_stm32f1xx.c ****   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
  99              		.loc 1 227 12
 100 0006 0023     		movs	r3, #0
 101 0008 FB60     		str	r3, [r7, #12]
 102              		.loc 1 227 22
 103 000a 0023     		movs	r3, #0
 104 000c BB60     		str	r3, [r7, #8]
 105              		.loc 1 227 36
 106 000e 0023     		movs	r3, #0
 107 0010 7B60     		str	r3, [r7, #4]
 228:Src/system_stm32f1xx.c **** 
 229:Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 230:Src/system_stm32f1xx.c ****   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
 231:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 232:Src/system_stm32f1xx.c **** 
 233:Src/system_stm32f1xx.c **** #if defined(STM32F100xB) || defined(STM32F100xE)
 234:Src/system_stm32f1xx.c ****   uint32_t prediv1factor = 0U;
 235:Src/system_stm32f1xx.c **** #endif /* STM32F100xB or STM32F100xE */
 236:Src/system_stm32f1xx.c ****     
 237:Src/system_stm32f1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 238:Src/system_stm32f1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 108              		.loc 1 238 12
 109 0012 2F4B     		ldr	r3, .L11
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 7


 110 0014 5B68     		ldr	r3, [r3, #4]
 111              		.loc 1 238 7
 112 0016 03F00C03 		and	r3, r3, #12
 113 001a FB60     		str	r3, [r7, #12]
 239:Src/system_stm32f1xx.c ****   
 240:Src/system_stm32f1xx.c ****   switch (tmp)
 114              		.loc 1 240 3
 115 001c FB68     		ldr	r3, [r7, #12]
 116 001e 082B     		cmp	r3, #8
 117 0020 11D0     		beq	.L3
 118 0022 FB68     		ldr	r3, [r7, #12]
 119 0024 082B     		cmp	r3, #8
 120 0026 3AD8     		bhi	.L4
 121 0028 FB68     		ldr	r3, [r7, #12]
 122 002a 002B     		cmp	r3, #0
 123 002c 03D0     		beq	.L5
 124 002e FB68     		ldr	r3, [r7, #12]
 125 0030 042B     		cmp	r3, #4
 126 0032 04D0     		beq	.L6
 127 0034 33E0     		b	.L4
 128              	.L5:
 241:Src/system_stm32f1xx.c ****   {
 242:Src/system_stm32f1xx.c ****     case 0x00U:  /* HSI used as system clock */
 243:Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 129              		.loc 1 243 23
 130 0036 274B     		ldr	r3, .L11+4
 131 0038 274A     		ldr	r2, .L11+8
 132 003a 1A60     		str	r2, [r3]
 244:Src/system_stm32f1xx.c ****       break;
 133              		.loc 1 244 7
 134 003c 33E0     		b	.L7
 135              	.L6:
 245:Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 246:Src/system_stm32f1xx.c ****       SystemCoreClock = HSE_VALUE;
 136              		.loc 1 246 23
 137 003e 254B     		ldr	r3, .L11+4
 138 0040 254A     		ldr	r2, .L11+8
 139 0042 1A60     		str	r2, [r3]
 247:Src/system_stm32f1xx.c ****       break;
 140              		.loc 1 247 7
 141 0044 2FE0     		b	.L7
 142              	.L3:
 248:Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 249:Src/system_stm32f1xx.c **** 
 250:Src/system_stm32f1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 251:Src/system_stm32f1xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 143              		.loc 1 251 20
 144 0046 224B     		ldr	r3, .L11
 145 0048 5B68     		ldr	r3, [r3, #4]
 146              		.loc 1 251 15
 147 004a 03F47013 		and	r3, r3, #3932160
 148 004e BB60     		str	r3, [r7, #8]
 252:Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 149              		.loc 1 252 22
 150 0050 1F4B     		ldr	r3, .L11
 151 0052 5B68     		ldr	r3, [r3, #4]
 152              		.loc 1 252 17
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 8


 153 0054 03F48033 		and	r3, r3, #65536
 154 0058 7B60     		str	r3, [r7, #4]
 253:Src/system_stm32f1xx.c ****       
 254:Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)      
 255:Src/system_stm32f1xx.c ****       pllmull = ( pllmull >> 18U) + 2U;
 155              		.loc 1 255 27
 156 005a BB68     		ldr	r3, [r7, #8]
 157 005c 9B0C     		lsrs	r3, r3, #18
 158              		.loc 1 255 15
 159 005e 0233     		adds	r3, r3, #2
 160 0060 BB60     		str	r3, [r7, #8]
 256:Src/system_stm32f1xx.c ****       
 257:Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 161              		.loc 1 257 10
 162 0062 7B68     		ldr	r3, [r7, #4]
 163 0064 002B     		cmp	r3, #0
 164 0066 06D1     		bne	.L8
 258:Src/system_stm32f1xx.c ****       {
 259:Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 260:Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 165              		.loc 1 260 45
 166 0068 BB68     		ldr	r3, [r7, #8]
 167 006a 1C4A     		ldr	r2, .L11+12
 168 006c 02FB03F3 		mul	r3, r2, r3
 169              		.loc 1 260 25
 170 0070 184A     		ldr	r2, .L11+4
 171 0072 1360     		str	r3, [r2]
 261:Src/system_stm32f1xx.c ****       }
 262:Src/system_stm32f1xx.c ****       else
 263:Src/system_stm32f1xx.c ****       {
 264:Src/system_stm32f1xx.c ****  #if defined(STM32F100xB) || defined(STM32F100xE)
 265:Src/system_stm32f1xx.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 266:Src/system_stm32f1xx.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 267:Src/system_stm32f1xx.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 268:Src/system_stm32f1xx.c ****  #else
 269:Src/system_stm32f1xx.c ****         /* HSE selected as PLL clock entry */
 270:Src/system_stm32f1xx.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 271:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 272:Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 273:Src/system_stm32f1xx.c ****         }
 274:Src/system_stm32f1xx.c ****         else
 275:Src/system_stm32f1xx.c ****         {
 276:Src/system_stm32f1xx.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 277:Src/system_stm32f1xx.c ****         }
 278:Src/system_stm32f1xx.c ****  #endif
 279:Src/system_stm32f1xx.c ****       }
 280:Src/system_stm32f1xx.c **** #else
 281:Src/system_stm32f1xx.c ****       pllmull = pllmull >> 18U;
 282:Src/system_stm32f1xx.c ****       
 283:Src/system_stm32f1xx.c ****       if (pllmull != 0x0DU)
 284:Src/system_stm32f1xx.c ****       {
 285:Src/system_stm32f1xx.c ****          pllmull += 2U;
 286:Src/system_stm32f1xx.c ****       }
 287:Src/system_stm32f1xx.c ****       else
 288:Src/system_stm32f1xx.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 289:Src/system_stm32f1xx.c ****         pllmull = 13U / 2U; 
 290:Src/system_stm32f1xx.c ****       }
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 9


 291:Src/system_stm32f1xx.c ****             
 292:Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 293:Src/system_stm32f1xx.c ****       {
 294:Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 295:Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 296:Src/system_stm32f1xx.c ****       }
 297:Src/system_stm32f1xx.c ****       else
 298:Src/system_stm32f1xx.c ****       {/* PREDIV1 selected as PLL clock entry */
 299:Src/system_stm32f1xx.c ****         
 300:Src/system_stm32f1xx.c ****         /* Get PREDIV1 clock source and division factor */
 301:Src/system_stm32f1xx.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 302:Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 303:Src/system_stm32f1xx.c ****         
 304:Src/system_stm32f1xx.c ****         if (prediv1source == 0U)
 305:Src/system_stm32f1xx.c ****         { 
 306:Src/system_stm32f1xx.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 307:Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 308:Src/system_stm32f1xx.c ****         }
 309:Src/system_stm32f1xx.c ****         else
 310:Src/system_stm32f1xx.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 311:Src/system_stm32f1xx.c ****           
 312:Src/system_stm32f1xx.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 313:Src/system_stm32f1xx.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
 314:Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 315:Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 316:Src/system_stm32f1xx.c ****         }
 317:Src/system_stm32f1xx.c ****       }
 318:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */ 
 319:Src/system_stm32f1xx.c ****       break;
 172              		.loc 1 319 7
 173 0074 17E0     		b	.L7
 174              	.L8:
 270:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 175              		.loc 1 270 17
 176 0076 164B     		ldr	r3, .L11
 177 0078 5B68     		ldr	r3, [r3, #4]
 270:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 178              		.loc 1 270 24
 179 007a 03F40033 		and	r3, r3, #131072
 270:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 180              		.loc 1 270 12
 181 007e 002B     		cmp	r3, #0
 182 0080 06D0     		beq	.L10
 272:Src/system_stm32f1xx.c ****         }
 183              		.loc 1 272 47
 184 0082 BB68     		ldr	r3, [r7, #8]
 185 0084 154A     		ldr	r2, .L11+12
 186 0086 02FB03F3 		mul	r3, r2, r3
 272:Src/system_stm32f1xx.c ****         }
 187              		.loc 1 272 27
 188 008a 124A     		ldr	r2, .L11+4
 189 008c 1360     		str	r3, [r2]
 190              		.loc 1 319 7
 191 008e 0AE0     		b	.L7
 192              	.L10:
 276:Src/system_stm32f1xx.c ****         }
 193              		.loc 1 276 39
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 10


 194 0090 BB68     		ldr	r3, [r7, #8]
 195 0092 114A     		ldr	r2, .L11+8
 196 0094 02FB03F3 		mul	r3, r2, r3
 276:Src/system_stm32f1xx.c ****         }
 197              		.loc 1 276 27
 198 0098 0E4A     		ldr	r2, .L11+4
 199 009a 1360     		str	r3, [r2]
 200              		.loc 1 319 7
 201 009c 03E0     		b	.L7
 202              	.L4:
 320:Src/system_stm32f1xx.c **** 
 321:Src/system_stm32f1xx.c ****     default:
 322:Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 203              		.loc 1 322 23
 204 009e 0D4B     		ldr	r3, .L11+4
 205 00a0 0D4A     		ldr	r2, .L11+8
 206 00a2 1A60     		str	r2, [r3]
 323:Src/system_stm32f1xx.c ****       break;
 207              		.loc 1 323 7
 208 00a4 00BF     		nop
 209              	.L7:
 324:Src/system_stm32f1xx.c ****   }
 325:Src/system_stm32f1xx.c ****   
 326:Src/system_stm32f1xx.c ****   /* Compute HCLK clock frequency ----------------*/
 327:Src/system_stm32f1xx.c ****   /* Get HCLK prescaler */
 328:Src/system_stm32f1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 210              		.loc 1 328 28
 211 00a6 0A4B     		ldr	r3, .L11
 212 00a8 5B68     		ldr	r3, [r3, #4]
 213              		.loc 1 328 52
 214 00aa 1B09     		lsrs	r3, r3, #4
 215 00ac 03F00F03 		and	r3, r3, #15
 216              		.loc 1 328 22
 217 00b0 0B4A     		ldr	r2, .L11+16
 218 00b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 219              		.loc 1 328 7
 220 00b4 FB60     		str	r3, [r7, #12]
 329:Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 330:Src/system_stm32f1xx.c ****   SystemCoreClock >>= tmp;  
 221              		.loc 1 330 19
 222 00b6 074B     		ldr	r3, .L11+4
 223 00b8 1A68     		ldr	r2, [r3]
 224 00ba FB68     		ldr	r3, [r7, #12]
 225 00bc 22FA03F3 		lsr	r3, r2, r3
 226 00c0 044A     		ldr	r2, .L11+4
 227 00c2 1360     		str	r3, [r2]
 331:Src/system_stm32f1xx.c **** }
 228              		.loc 1 331 1
 229 00c4 00BF     		nop
 230 00c6 1437     		adds	r7, r7, #20
 231              	.LCFI7:
 232              		.cfi_def_cfa_offset 4
 233 00c8 BD46     		mov	sp, r7
 234              	.LCFI8:
 235              		.cfi_def_cfa_register 13
 236              		@ sp needed
 237 00ca 80BC     		pop	{r7}
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 11


 238              	.LCFI9:
 239              		.cfi_restore 7
 240              		.cfi_def_cfa_offset 0
 241 00cc 7047     		bx	lr
 242              	.L12:
 243 00ce 00BF     		.align	2
 244              	.L11:
 245 00d0 00100240 		.word	1073876992
 246 00d4 00000000 		.word	SystemCoreClock
 247 00d8 00127A00 		.word	8000000
 248 00dc 00093D00 		.word	4000000
 249 00e0 00000000 		.word	AHBPrescTable
 250              		.cfi_endproc
 251              	.LFE66:
 253              		.text
 254              	.Letext0:
 255              		.file 2 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 256              		.file 3 "c:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 257              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 258              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 259              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
ARM GAS  C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f1xx.c
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:22     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:19     .data.SystemCoreClock:00000000 $d
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:29     .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:26     .rodata.AHBPrescTable:00000000 $d
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:37     .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:34     .rodata.APBPrescTable:00000000 $d
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:40     .text.SystemInit:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:46     .text.SystemInit:00000000 SystemInit
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:76     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:82     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\57298\AppData\Local\Temp\ccLs9Cdc.s:245    .text.SystemCoreClockUpdate:000000d0 $d

NO UNDEFINED SYMBOLS
